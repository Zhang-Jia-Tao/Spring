ch06-Aop-AspectJ:使用AspectJ框架实现Aop
    使用Aop：目的是为了给已经存在的一些类和方法，增加额外的功能，前提是不改变原来类的代码

使用AspectJ实现Aop的基本步骤
1.新建maven项目

2.加入依赖
    1）spring依赖
    2）AspectJ依赖

3.创建目标类：接口和它的实现类
     我们要完成的是给目标类中的方法增加功能

4.创建切面类，就是一个普通类
    1）在类的上面加入注解@Aspect
    2)在类中定义方法，方法就是切面类要执行的功能代码
        在方法的上面加入AspectJ的通知注解，例如@Before
        还需要指定切入点表达式

5.创建spring的配置文件：用于声明对象，由容器统一管理对象
    声明对象，可以使用xml配置文件或者注解
    1）声明目标类对象
    2）声明切面类对象
    3）声明aspectJ框架中的自动代理生成器标签
        自动代理生成器：用来完成代理对象的自动创建功能

6.创建测试类。从spring容器中获取目标对象（实际就是代理对象）
    通过代理执行方法，实现Aop的功能增强


什么时候考虑使用Aop
    1）当你要给一个系统中存在的类修改功能，但是原有类的功能不完善，但是又没有源代码，使用Aop增强功能
    2）你要给项目中的多个类，增加一个相同的功能，使用Aop
    3）给业务方法增加事务、日志输出等功能时，使用Aop

Aop的技术实现框架：
    1）sprin实现了Aop，实现的方式是接口
    2）AspectJ框架
            1.使用注解实现Aop的功能
            2.使用xml配置文件中的标签实现Aop的功能


